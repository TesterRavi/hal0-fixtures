#!/usr/bin/env ruby

halo_sql_dir = File.absolute_path "#{File.dirname(__FILE__)}/../.."

load "#{halo_sql_dir}/fixtures/lib/hautelook_db.rb"

hdb = HautelookDb.new halo_sql_dir

action = ARGV[0]

def usage
  puts 'Usage: fixtures [ACTION]'
  puts 'Actions are one of the following'
  puts 'audit               - check mysql for referential integrity'
  puts 'audit_table <table> - audit a specific table for '
  puts 'export              - write sql files with the schema, table data and stored procedures'
  puts '                      to the filesystem'
  puts 'populate            - populate mysql with schema, table data and stored procedures from the filesystem'
  puts 'populate-schema     - reset the database and load the schema defined in halo-sql/schema'
  puts 'populate-sprocs     - populate mysql with stored procedures from the filesystem'
  puts 'populate-tables     - populate mysql with table data and triggers from the filesystem'
  puts '                      (assumes schema are already defined in mysql)'
  puts 'resetdb             - drop and create the empty database'
end

begin
  case action
    when 'audit'
    hdb.audit
  when 'audit_table'
    table = ARGV[1]
    if table.nil?
     puts "audit_table needs to be told which table to audit"
     usage
     exit -1
    end
    hdb.audit_table table
  when 'export'
    hdb.export
  when 'populate'
    puts 'populating database...'
    hdb.import
  when 'populate-tables'
    puts "populating table triggers and data..."
    hdb.import_tables
  when 'populate-schema'
    puts "populating schema..."
    hdb.import_schema
  when 'populate-sprocs'
    puts "populating stored procedures..."
    hdb.import_sprocs
  when 'resetdb'
    hdb.reset
  else
    usage
    exit -1
  end
rescue Exception => e
  puts "error: #{e}"
  puts usage
  exit -1
end

exit 0
